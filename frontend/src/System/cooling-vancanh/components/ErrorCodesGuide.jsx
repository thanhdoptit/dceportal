import {
  CheckCircleOutlined,
  CloseCircleOutlined,
  ExclamationCircleOutlined,
  SearchOutlined,
} from '@ant-design/icons';
import { Alert, Card, Collapse, Divider, Input, Space, Table, Tag, Typography } from 'antd';
import React, { useState } from 'react';

const { Title, Text, Paragraph } = Typography;
const { Panel } = Collapse;

const ErrorCodesGuide = () => {
  const [searchText, setSearchText] = useState('');

  // SMARDT Chiller Error Codes t·ª´ t√†i li·ªáu
  const smartdErrorCodes = [
    {
      key: '1',
      code: 'System 1 LP Fault',
      description: 'Low evaporator pressure fault (Refrigeration system 1)',
      severity: 'Trung b√¨nh',
      cause: 'Thi·∫øu gas l·∫°nh, b·ªô bay h∆°i b·∫©n, l∆∞u l∆∞·ª£ng n∆∞·ªõc th·∫•p',
      solution: 'Ki·ªÉm tra m·ª©c gas R134a, l√†m s·∫°ch evaporator, ki·ªÉm tra b∆°m n∆∞·ªõc l·∫°nh',
      autoReset: 'C√≥',
      category: 'System Pressure',
    },
    {
      key: '2',
      code: 'System 1 HP Fault',
      description: 'High condenser pressure fault (Refrigeration system 1)',
      severity: 'Cao',
      cause: 'Qu·∫°t t·∫£n nhi·ªát l·ªói, condenser b·∫©n, nhi·ªát ƒë·ªô m√¥i tr∆∞·ªùng cao',
      solution: 'Ki·ªÉm tra ho·∫°t ƒë·ªông 10 qu·∫°t EBM, l√†m s·∫°ch condenser coil',
      autoReset: 'C√≥',
      category: 'System Pressure',
    },
    {
      key: '3',
      code: 'Low Water Temperature Fault',
      description: 'Leaving chilled water temperature reached low limit',
      severity: 'Trung b√¨nh',
      cause: 'Set point qu√° th·∫•p, sensor l·ªói, t·∫£i l√†m l·∫°nh th·∫•p',
      solution: 'Ki·ªÉm tra set point (>6¬∞C), test sensor, ƒëi·ªÅu ch·ªânh t·∫£i',
      autoReset: 'C√≥',
      category: 'Temperature',
    },
    {
      key: '4',
      code: 'ChW Temperature Sensor Fault',
      description: 'Chilled water temperature sensors reading incorrectly',
      severity: 'Cao',
      cause: 'Sensor h·ªèng, k·∫øt n·ªëi l·ªèng, nhi·ªÖu ƒëi·ªán',
      solution: 'Thay sensor, ki·ªÉm tra d√¢y c√°p, ch·ªëng nhi·ªÖu',
      autoReset: 'Kh√¥ng',
      category: 'Sensor',
    },
    {
      key: '5',
      code: 'CoW Flow Lockout Fault',
      description: 'No condenser water flow detected after 5 attempts',
      severity: 'Nghi√™m tr·ªçng',
      cause: 'Kh√¥ng c√≥ n∆∞·ªõc l√†m m√°t, b∆°m n∆∞·ªõc l·ªói, van ƒë√≥ng',
      solution: 'Ki·ªÉm tra h·ªá th·ªëng n∆∞·ªõc, kh·ªüi ƒë·ªông b∆°m, m·ªü van',
      autoReset: 'Kh√¥ng',
      category: 'Water Flow',
    },
    {
      key: '6',
      code: 'C1 Lockout - Fault Count',
      description: 'Compressor locked out due to excessive auto-reset faults',
      severity: 'Nghi√™m tr·ªçng',
      cause: 'L·ªói l·∫∑p l·∫°i nhi·ªÅu l·∫ßn, h·ªá th·ªëng kh√¥ng ·ªïn ƒë·ªãnh',
      solution: 'Reset compressor, ki·ªÉm tra to√†n b·ªô h·ªá th·ªëng',
      autoReset: 'Kh√¥ng',
      category: 'Compressor',
    },
    {
      key: '7',
      code: 'C1 - Generator Mode',
      description: 'DC Bus voltage low, compressor using shaft energy',
      severity: 'Nghi√™m tr·ªçng',
      cause: 'ƒêi·ªán √°p DC th·∫•p, s·ª± c·ªë ngu·ªìn ƒëi·ªán',
      solution: 'Ki·ªÉm tra ngu·ªìn ƒëi·ªán 400V, ki·ªÉm tra DC bus',
      autoReset: 'Kh√¥ng',
      category: 'Electrical',
    },
    {
      key: '8',
      code: 'C1 - Memory Checksum Error',
      description: 'EEPROM calibration data error detected',
      severity: 'Cao',
      cause: 'EEPROM l·ªói, d·ªØ li·ªáu b·ªã h·ªèng',
      solution: 'Reset EEPROM, t·∫£i l·∫°i calibration data',
      autoReset: 'Kh√¥ng',
      category: 'System',
    },
    {
      key: '9',
      code: 'C1 - 24VDC Out Of Range',
      description: '24VDC supply voltage outside acceptable range',
      severity: 'Cao',
      cause: 'Ngu·ªìn 24VDC l·ªói, bi·∫øn √°p h·ªèng',
      solution: 'Ki·ªÉm tra ngu·ªìn 24VDC (20-28VDC), thay bi·∫øn √°p',
      autoReset: 'C√≥',
      category: 'Electrical',
    },
    {
      key: '10',
      code: 'C1 - High Current',
      description: 'RMS Current exceeded High Current Fault Limit',
      severity: 'Nghi√™m tr·ªçng',
      cause: 'Qu√° t·∫£i, motor b·ªã k·∫πt, ƒëi·ªán √°p th·∫•p',
      solution: 'Gi·∫£m t·∫£i, ki·ªÉm tra motor, ·ªïn ƒë·ªãnh ƒëi·ªán √°p',
      autoReset: 'Kh√¥ng',
      category: 'Electrical',
    },
    {
      key: '11',
      code: 'C1 - Motor Winding Temperature',
      description: 'Motor thermal exceeded 155¬∞C limit',
      severity: 'Nghi√™m tr·ªçng',
      cause: 'Motor qu√° n√≥ng, l√†m m√°t k√©m',
      solution: 'T·∫Øt m√°y ngay, ki·ªÉm tra l√†m m√°t motor, thay motor',
      autoReset: 'Kh√¥ng',
      category: 'Temperature',
    },
    {
      key: '12',
      code: 'C1 - Discharge Pressure',
      description: 'Discharge pressure exceeded fault limit',
      severity: 'Nghi√™m tr·ªçng',
      cause: '√Åp su·∫•t x·∫£ qu√° cao, t·∫Øc ngh·∫Ωn, condenser b·∫©n',
      solution: 'T·∫Øt m√°y, l√†m s·∫°ch condenser, ki·ªÉm tra h·ªá th·ªëng',
      autoReset: 'Kh√¥ng',
      category: 'System Pressure',
    },
  ];

  // UNIFLAIR PAC Error Codes
  const uniflairErrorCodes = [
    {
      key: '13',
      code: 'AL01 - High Room Temperature',
      description: 'Room temperature too high',
      severity: 'Trung b√¨nh',
      cause: 'T·∫£i nhi·ªát cao, chiller kh√¥ng ƒë·ªß c√¥ng su·∫•t',
      solution: 'Ki·ªÉm tra t·∫£i ph√≤ng, tƒÉng c√¥ng su·∫•t l√†m l·∫°nh',
      autoReset: 'C√≥',
      category: 'Temperature',
    },
    {
      key: '14',
      code: 'AL02 - Low Room Temperature',
      description: 'Room temperature too low',
      severity: 'Th·∫•p',
      cause: 'Set point th·∫•p, t·∫£i ph√≤ng th·∫•p',
      solution: 'ƒêi·ªÅu ch·ªânh set point, ki·ªÉm tra sensor',
      autoReset: 'C√≥',
      category: 'Temperature',
    },
    {
      key: '15',
      code: 'AL10 - Water Flow Alarm',
      description: 'Chilled water flow too low',
      severity: 'Cao',
      cause: 'Van ƒë√≥ng, b∆°m l·ªói, ƒë∆∞·ªùng ·ªëng t·∫Øc',
      solution: 'M·ªü van, ki·ªÉm tra b∆°m, th√¥ng ƒë∆∞·ªùng ·ªëng',
      autoReset: 'C√≥',
      category: 'Water Flow',
    },
    {
      key: '16',
      code: 'AL15 - Fan Fault',
      description: 'EC fan motor fault detected',
      severity: 'Cao',
      cause: 'Motor fan l·ªói, ƒëi·ªÅu khi·ªÉn EC l·ªói',
      solution: 'Thay motor EC, ki·ªÉm tra ƒëi·ªÅu khi·ªÉn',
      autoReset: 'Kh√¥ng',
      category: 'Fan',
    },
  ];

  // Combine all error codes
  const allErrorCodes = [...smartdErrorCodes, ...uniflairErrorCodes];

  // Filter function
  const filteredCodes = allErrorCodes.filter(
    error =>
      error.code.toLowerCase().includes(searchText.toLowerCase()) ||
      error.description.toLowerCase().includes(searchText.toLowerCase()) ||
      error.cause.toLowerCase().includes(searchText.toLowerCase())
  );

  // Severity colors
  const getSeverityColor = severity => {
    switch (severity) {
      case 'Nghi√™m tr·ªçng':
        return 'red';
      case 'Cao':
        return 'orange';
      case 'Trung b√¨nh':
        return 'yellow';
      case 'Th·∫•p':
        return 'green';
      default:
        return 'blue';
    }
  };

  // Table columns
  const columns = [
    {
      title: 'M√£ l·ªói',
      dataIndex: 'code',
      key: 'code',
      width: 200,
      render: (text, record) => (
        <div>
          <Text strong>{text}</Text>
          <br />
          <Tag color={getSeverityColor(record.severity)} size='small'>
            {record.severity}
          </Tag>
        </div>
      ),
    },
    {
      title: 'M√¥ t·∫£',
      dataIndex: 'description',
      key: 'description',
      width: 250,
    },
    {
      title: 'Nguy√™n nh√¢n',
      dataIndex: 'cause',
      key: 'cause',
      width: 300,
      render: text => <Text type='warning'>{text}</Text>,
    },
    {
      title: 'Gi·∫£i ph√°p',
      dataIndex: 'solution',
      key: 'solution',
      width: 350,
      render: text => <Text type='success'>{text}</Text>,
    },
    {
      title: 'Auto Reset',
      dataIndex: 'autoReset',
      key: 'autoReset',
      width: 100,
      render: text => (
        <Tag
          color={text === 'C√≥' ? 'green' : 'red'}
          icon={text === 'C√≥' ? <CheckCircleOutlined /> : <CloseCircleOutlined />}
        >
          {text}
        </Tag>
      ),
    },
  ];

  return (
    <div style={{ padding: '20px 0' }}>
      <div id='4.2' style={{ scrollMarginTop: '20px' }}>
        <Title level={3} style={{ color: '#1890ff', marginBottom: '24px' }}>
          <ExclamationCircleOutlined style={{ marginRight: '12px' }} />
          4.2. T·ªïng h·ª£p m√£ l·ªói, nguy√™n nh√¢n v√† c√°ch gi·∫£i quy·∫øt - TTDL V√¢n Canh
        </Title>
      </div>

      <Alert
        message='H∆∞·ªõng d·∫´n x·ª≠ l√Ω l·ªói h·ªá th·ªëng'
        description='D∆∞·ªõi ƒë√¢y l√† t·ªïng h·ª£p ƒë·∫ßy ƒë·ªß c√°c m√£ l·ªói c·ªßa SMARDT Chiller v√† UNIFLAIR PAC t·∫°i TTDL V√¢n Canh. Vui l√≤ng th·ª±c hi·ªán ƒë√∫ng tr√¨nh t·ª± x·ª≠ l√Ω v√† tu√¢n th·ªß an to√†n.'
        type='info'
        showIcon
        style={{ marginBottom: '24px' }}
      />

      {/* Search */}
      <Space style={{ marginBottom: '20px' }}>
        <Input
          placeholder='T√¨m ki·∫øm m√£ l·ªói, m√¥ t·∫£ ho·∫∑c nguy√™n nh√¢n...'
          prefix={<SearchOutlined />}
          value={searchText}
          onChange={e => setSearchText(e.target.value)}
          style={{ width: 400 }}
        />
        <Text>T√¨m th·∫•y: {filteredCodes.length} m√£ l·ªói</Text>
      </Space>

      {/* Error Categories */}
      <Collapse style={{ marginBottom: '24px' }}>
        <Panel header='üìä Ph√¢n lo·∫°i m√£ l·ªói theo category' key='categories'>
          <Space wrap>
            <Tag color='red'>System Pressure (3)</Tag>
            <Tag color='orange'>Temperature (3)</Tag>
            <Tag color='blue'>Electrical (3)</Tag>
            <Tag color='green'>Compressor (1)</Tag>
            <Tag color='purple'>Water Flow (2)</Tag>
            <Tag color='cyan'>Sensor (1)</Tag>
            <Tag color='magenta'>Fan (1)</Tag>
            <Tag color='gold'>System (1)</Tag>
          </Space>
        </Panel>

        <Panel header='‚ö†Ô∏è Quy tr√¨nh x·ª≠ l√Ω s·ª± c·ªë' key='procedure'>
          <div>
            <Paragraph>
              <Text strong>1. X√°c ƒë·ªãnh m·ª©c ƒë·ªô nghi√™m tr·ªçng:</Text>
              <ul>
                <li>
                  <Tag color='red'>Nghi√™m tr·ªçng</Tag>: T·∫Øt m√°y ngay l·∫≠p t·ª©c, li√™n h·ªá k·ªπ thu·∫≠t
                </li>
                <li>
                  <Tag color='orange'>Cao</Tag>: Theo d√µi s√°t, chu·∫©n b·ªã ph∆∞∆°ng √°n
                </li>
                <li>
                  <Tag color='yellow'>Trung b√¨nh</Tag>: X·ª≠ l√Ω trong ca, b√°o c√°o
                </li>
                <li>
                  <Tag color='green'>Th·∫•p</Tag>: Ghi nh·∫≠n, x·ª≠ l√Ω khi c√≥ th·ªùi gian
                </li>
              </ul>
            </Paragraph>

            <Paragraph>
              <Text strong>2. Quy tr√¨nh x·ª≠ l√Ω:</Text>
              <ol>
                <li>Ghi nh·∫≠n th·ªùi gian, m√£ l·ªói, ƒëi·ªÅu ki·ªán v·∫≠n h√†nh</li>
                <li>Ki·ªÉm tra Auto Reset (n·∫øu c√≥)</li>
                <li>Th·ª±c hi·ªán gi·∫£i ph√°p theo b·∫£ng h∆∞·ªõng d·∫´n</li>
                <li>Theo d√µi 30 ph√∫t sau x·ª≠ l√Ω</li>
                <li>B√°o c√°o ca tr·ª±c v√† ghi bi√™n b·∫£n</li>
              </ol>
            </Paragraph>
          </div>
        </Panel>
      </Collapse>

      {/* Main Error Codes Table */}
      <Card>
        <Table
          columns={columns}
          dataSource={filteredCodes}
          pagination={{
            pageSize: 10,
            showSizeChanger: true,
            showQuickJumper: true,
            showTotal: (total, range) => `${range[0]}-${range[1]} c·ªßa ${total} m√£ l·ªói`,
          }}
          scroll={{ x: 1200 }}
          size='small'
        />
      </Card>

      <Divider />

      {/* Emergency Contact */}
      <Alert
        message='Li√™n h·ªá kh·∫©n c·∫•p'
        description={
          <div>
            <p>
              <strong>L·ªói nghi√™m tr·ªçng:</strong> Li√™n h·ªá ngay Tr∆∞·ªüng ca v√† K·ªπ thu·∫≠t HVAC
            </p>
            <p>
              <strong>SMARDT Service:</strong> APC Industry - 028.3722.3600
            </p>
            <p>
              <strong>UNIFLAIR Service:</strong> Schneider Electric - 028.3823.9575
            </p>
            <p>
              <strong>24/7 Support:</strong> Hotline Data Center - 1900.xxxx
            </p>
          </div>
        }
        type='error'
        showIcon
        style={{ marginTop: '20px' }}
      />
    </div>
  );
};

export default ErrorCodesGuide;
