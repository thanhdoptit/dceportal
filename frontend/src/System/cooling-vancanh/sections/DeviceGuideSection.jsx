import {
    CheckCircleOutlined,
    CloudOutlined,
    SettingOutlined
} from '@ant-design/icons';
import { Alert, Card, Col, Collapse, Divider, Row, Tag, Typography } from 'antd';
import React from 'react';
import '../../shared/styles/SystemSection.css';

// Import c√°c thi·∫øt b·ªã
import BMSChiller from '../devices/BMSChiller';
import EasyInRowCW from '../devices/EasyInRowCW';
import LDCVSeries from '../devices/LDCVSeries';
import PumpingSystemDevices from '../devices/PumpingSystemDevices';
import SDCVSeries from '../devices/SDCVSeries';
import SMARDTChiller from '../devices/SMARDTChiller';

const { Title, Paragraph, Text } = Typography;
const { Panel } = Collapse;

const DeviceGuideSection = () => {
  console.log('üöÄ DeviceGuideSection component rendered');
  
  // Danh s√°ch thi·∫øt b·ªã ch√≠nh
  const devices = [
    {
      id: '2.1',
      name: 'Chiller SMARDT AE Series',
      model: 'AE054.2B.F2HAJA.A010DX.E10',
      type: 'Air-cooled Chiller',
      capacity: '632kW (180RT)',
      features: [
        'C√¥ng ngh·ªá Oil-free compressor',
        'Hi·ªáu su·∫•t cao COP 3.5',
        'ƒêi·ªÅu khi·ªÉn th√¥ng minh v·ªõi PLC',
        '2 m√°y n√©n song song'
      ]
    },
    {
      id: '2.2',
      name: 'PAC UNIFLAIR SDCV Series',
      model: 'SDCV0300A, SDCV0400A, SDCV0600A',
      type: 'Precision Air Conditioning',
      capacity: '3-15.6kW',
      features: [
        'ƒê·ªô ch√≠nh x√°c nhi·ªát ƒë·ªô ¬±0.5¬∞C',
        'ƒêi·ªÅu khi·ªÉn ƒë·ªô ·∫©m 45-55%',
        'L√†m m√°t ph√≤ng server nh·ªè',
        'T√≠ch h·ª£p BMS Modbus'
      ]
    },
    {
      id: '2.3',
      name: 'PAC UNIFLAIR LDCV Series',
      model: 'LDCV0600A, LDCV1800A, LDCV3400A, LDCV4300A',
      type: 'Large Room Cooling',
      capacity: '16.8-110kW',
      features: [
        'C√¥ng su·∫•t l·ªõn cho ph√≤ng server',
        'ƒê·ªô ch√≠nh x√°c nhi·ªát ƒë·ªô ¬±0.5¬∞C',
        'ƒêi·ªÅu khi·ªÉn ƒë·ªô ·∫©m 45-55%',
        'T√≠ch h·ª£p BMS Modbus'
      ]
    },
    {
      id: '2.4',
      name: 'Easy InRow CW Series',
      model: 'ERC311AD0HPE',
      type: 'Chilled Water InRow Cooling',
      capacity: '21.6kW',
      features: [
        'L√†m m√°t tr·ª±c ti·∫øp t·∫°i ngu·ªìn nhi·ªát',
        'Thi·∫øt k·∫ø compact ti·∫øt ki·ªám kh√¥ng gian',
        'T·ªëi ∆∞u hi·ªáu qu·∫£ l√†m m√°t cho t·ª´ng rack',
        'D·ªÖ d√†ng m·ªü r·ªông khi c·∫ßn'
      ]
    },
    {
      id: '2.5',
      name: 'H·ªá th·ªëng BMS Chiller',
      model: 'BMS Integration',
      type: 'Building Management System',
      capacity: 'N/A',
      features: [
        'Gi√°m s√°t nhi·ªát ƒë·ªô, ƒë·ªô ·∫©m, √°p su·∫•t, l∆∞u l∆∞·ª£ng',
        'ƒêi·ªÅu khi·ªÉn t·ª± ƒë·ªông kh·ªüi ƒë·ªông/d·ª´ng thi·∫øt b·ªã',
        'Giao ti·∫øp Modbus RTU/TCP v·ªõi t·∫•t c·∫£ thi·∫øt b·ªã',
        'B√°o c√°o v√† c·∫£nh b√°o th√¥ng minh'
      ]
    },
    {
      id: '2.6',
      name: 'H·ªá th·ªëng b∆°m n∆∞·ªõc v√† thi·∫øt b·ªã ph·ª• tr·ª£',
      model: 'Multiple Models',
      type: 'Water Pumping & Support Equipment',
      capacity: 'Variable',
      features: [
        'B∆°m tu·∫ßn ho√†n 3D 40-200 (600L/min, 45m)',
        'Tank duy tr√¨ √°p su·∫•t SHC (300-1000L)',
        'B√¨nh gi√£n n·ªü m√†ng ExpanSion (80-500L)',
        'B·ªô t√°ch kh√≠ t·ª± ƒë·ªông KVS-870',
        'C·ª•m n·∫°p h√≥a ch·∫•t DPD-30',
        'BTU Meter F-1000 v√† System-10 Dry-Tap',
        'TES Tank BTD-360 (360 t·∫•n, 10 ph√∫t d·ª± ph√≤ng)',
        'Van c√¢n b·∫±ng Herz 4006 v√† PICV 4206'
      ]
    }
  ];

  // H√†m render thi·∫øt b·ªã d·ª±a tr√™n ID
  const renderDevice = (deviceId) => {
    console.log('üîß Rendering device:', deviceId);
    switch (deviceId) {
      case '2.1':
        return <SMARDTChiller />;
      case '2.2':
        return <SDCVSeries />;
      case '2.3':
        return <LDCVSeries />;
      case '2.4':
        return <EasyInRowCW />;
      case '2.5':
        return <BMSChiller />;
      case '2.6':
        return <PumpingSystemDevices />;
      default:
        console.log('‚ùå Unknown device ID:', deviceId);
        return null;
    }
  };

  return (
    <div id="section-2" className="content-section">
      <Title level={2}>
        <SettingOutlined style={{ marginRight: '12px' }} />
        2. H∆∞·ªõng d·∫´n chi ti·∫øt t·ª´ng thi·∫øt b·ªã - TTDL V√¢n Canh
      </Title>
      <Alert
        message="H∆∞·ªõng d·∫´n thi·∫øt b·ªã"
        description="D∆∞·ªõi ƒë√¢y l√† h∆∞·ªõng d·∫´n chi ti·∫øt cho t·ª´ng thi·∫øt b·ªã trong h·ªá th·ªëng l√†m m√°t TTDL V√¢n Canh. M·ªói thi·∫øt b·ªã c√≥ c√°c section ri√™ng bi·ªát ƒë·ªÉ d·ªÖ d√†ng tra c·ª©u v√† th·ª±c hi·ªán."
        type="info"
        showIcon
        style={{ marginBottom: '24px' }}
      />
      {/* Danh s√°ch thi·∫øt b·ªã */}
      <Row gutter={[16, 16]}>
        {devices.map((device, index) => (
          <Col xs={24} lg={12} key={index}>
            <Card
              title={
                <div style={{ display: 'flex', alignItems: 'center' }}>
                  <CloudOutlined style={{ marginRight: '8px', color: '#1890ff' }} />
                  {device.name}
                </div>
              }
              style={{ height: '100%' }}
              extra={
                <Tag color="green">{device.id}</Tag>
              }
            >
              <div style={{ marginBottom: '16px' }}>
                <div style={{ marginBottom: '8px' }}>
                  <Text strong>Model:</Text> {device.model}
                </div>
                <div style={{ marginBottom: '8px' }}>
                  <Text strong>Lo·∫°i:</Text> {device.type}
                </div>
                <div style={{ marginBottom: '8px' }}>
                  <Text strong>C√¥ng su·∫•t:</Text> {device.capacity}
                </div>
              </div>

              <div style={{ marginBottom: '16px' }}>
                <Text strong>T√≠nh nƒÉng ch√≠nh:</Text>
                <div style={{ marginTop: '8px' }}>
                  {device.features.map((feature, idx) => (
                    <Tag key={idx} color="blue" style={{ marginBottom: '4px' }}>
                      <CheckCircleOutlined style={{ marginRight: '4px' }} />
                      {feature}
                    </Tag>
                  ))}
                </div>
              </div>
            </Card>
          </Col>
        ))}
      </Row>

      <Divider />

      {/* N·ªôi dung chi ti·∫øt t·ª´ng thi·∫øt b·ªã */}
      {devices.map((device, deviceIndex) => (
        <div key={deviceIndex} style={{ marginBottom: '40px' }}>
          {renderDevice(device.id)}
        </div>
      ))}

      {/* L∆∞u √Ω quan tr·ªçng */}
      <Alert
        message="L∆∞u √Ω quan tr·ªçng"
        description="M·ªói thi·∫øt b·ªã c√≥ c√°c y√™u c·∫ßu v·∫≠n h√†nh v√† b·∫£o tr√¨ ri√™ng bi·ªát. Vui l√≤ng tu√¢n th·ªß nghi√™m ng·∫∑t c√°c h∆∞·ªõng d·∫´n c·ªßa nh√† s·∫£n xu·∫•t v√† quy tr√¨nh n·ªôi b·ªô ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n v√† hi·ªáu qu·∫£."
        type="warning"
        showIcon
        style={{ marginTop: '24px' }}
      />
    </div>
  );
};

export default DeviceGuideSection;
